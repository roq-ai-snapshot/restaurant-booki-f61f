generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model invitation {
  id                             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status                         String   @db.VarChar(255)
  owner_id                       String   @db.Uuid
  chef_id                        String   @db.Uuid
  created_at                     DateTime @default(now()) @db.Timestamp(6)
  updated_at                     DateTime @default(now()) @db.Timestamp(6)
  user_invitation_chef_idTouser  user     @relation("invitation_chef_idTouser", fields: [chef_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_invitation_owner_idTouser user     @relation("invitation_owner_idTouser", fields: [owner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model menu {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String     @db.VarChar(255)
  description   String?    @db.VarChar(255)
  price         Int
  restaurant_id String     @db.Uuid
  chef_id       String     @db.Uuid
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  updated_at    DateTime   @default(now()) @db.Timestamp(6)
  user          user       @relation(fields: [chef_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model reservation {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date        DateTime @db.Date
  time        DateTime @db.Time(6)
  guest_count Int
  guest_id    String   @db.Uuid
  table_id    String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [guest_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  table       table    @relation(fields: [table_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model restaurant {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?  @db.VarChar(255)
  location      String?  @db.VarChar(255)
  opening_hours String?  @db.VarChar(255)
  closing_hours String?  @db.VarChar(255)
  name          String   @db.VarChar(255)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  user_id       String   @db.Uuid
  tenant_id     String   @db.VarChar(255)
  menu          menu[]
  user          user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  table         table[]
}

model table {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  number        Int
  capacity      Int
  restaurant_id String        @db.Uuid
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  reservation   reservation[]
  restaurant    restaurant    @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id                                   String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                String        @unique @db.VarChar(255)
  firstName                            String?       @db.VarChar(255)
  lastName                             String?       @db.VarChar(255)
  roq_user_id                          String        @db.VarChar(255)
  tenant_id                            String        @db.VarChar(255)
  created_at                           DateTime      @default(now()) @db.Timestamp(6)
  updated_at                           DateTime      @default(now()) @db.Timestamp(6)
  invitation_invitation_chef_idTouser  invitation[]  @relation("invitation_chef_idTouser")
  invitation_invitation_owner_idTouser invitation[]  @relation("invitation_owner_idTouser")
  menu                                 menu[]
  reservation                          reservation[]
  restaurant                           restaurant[]
}
